package ekdahl;


import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

public class Values {

	private static int[] smallSize = new int[]{5, 3, 9, 4, 2, 6, 10, 8, 1, 7};

	private static int[] smallSizeSorted = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

	private static int[] almostSortedArray = new int[]{
			1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 40, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100
	};


	private static int[] mediumSize = new int[]{536, 927, 911, 398, 65, 86, 437, 135, 337, 691, 928, 79, 51, 571, 815, 438, 973, 619, 616, 439,
			838, 141, 237, 42, 844, 50, 486, 286, 684, 362, 585, 658, 675, 363, 804, 107, 487, 376, 156, 411, 810, 827, 991, 108, 100, 128, 703, 370, 660, 344, 601, 147, 875, 952, 814, 485, 306, 653, 505, 90, 644, 116, 528, 57, 507, 214, 503, 698, 74, 258, 543, 623, 172, 883, 755, 950, 767, 925, 508, 303, 760, 812, 671, 151, 182, 138, 177, 996, 103, 820, 64, 400, 264, 706, 413, 701, 367, 95, 30, 482, 163, 358, 374, 292, 923, 989, 995, 483, 558, 643, 193, 118, 562, 339, 219, 334, 257, 587, 283, 936, 234, 39, 807, 291, 993, 683, 450, 410, 920, 388, 849, 702, 872, 197, 747, 201, 204, 710, 406, 87, 98, 21, 597, 965, 877, 662, 824, 695, 977, 287, 719, 467, 833, 469, 254, 318, 99, 943, 967, 248, 518, 873, 874, 628, 564, 28, 452, 980, 639, 903, 631, 635, 934, 779, 12, 944, 475, 381, 637, 617, 32, 891, 716, 472, 19, 280, 326, 567, 215, 341, 154, 53, 496, 77, 688, 888, 777, 252, 598, 704, 333, 276, 317, 864, 14, 369, 904, 848, 375, 987, 673, 885, 624, 986, 795, 416, 281, 20, 926, 178, 798, 293, 113, 166, 249, 821, 227, 314, 840, 580, 595, 544, 223, 990, 650, 530,
			183, 61, 589, 962, 176, 296, 960, 762, 217, 224, 25, 34, 417, 529, 794, 686, 111, 259, 915, 419, 817, 445, 261, 902, 548, 232, 614,
			319, 300, 550, 577, 9, 843, 700, 561, 835, 392, 307, 426, 309, 790, 494, 630, 446, 778, 6, 914, 312, 770, 515, 490, 421, 832, 659, 732, 655, 837, 942, 858, 96, 752, 557, 88, 93, 332, 978, 60, 606, 343, 559, 396, 161, 931, 481, 308, 568, 740, 488, 384, 626, 431, 186, 521, 682, 668, 379, 157, 43, 632, 712, 500, 609, 985, 443, 402, 13, 584, 491, 618, 555, 330, 541, 900, 38, 115, 444, 359, 998, 581, 1, 17, 315, 470, 497, 853, 831, 184, 909, 241, 963, 114, 272, 216, 834, 119, 532, 800, 299, 941, 763, 805, 929, 137, 310, 612, 634, 199, 576, 997, 441, 679, 551, 63, 361, 277, 92, 48, 228, 764, 992, 678, 933, 422, 321, 775, 534, 744, 1000, 222, 131, 582, 749, 983, 517, 285, 265, 242, 940, 91, 267, 569, 522, 981, 498, 905, 910, 956, 745, 690, 288, 350, 636, 657, 94, 676, 316, 476, 62, 715, 188, 173, 621, 347, 645, 165, 394, 670, 802, 591, 495, 69, 501, 412, 207, 340, 901, 263, 152, 84, 433, 711, 18, 907, 895, 782, 776, 78, 570, 826, 145, 371, 819, 233, 916, 33, 75, 746, 988, 731, 959, 109, 841, 456, 867, 404, 768, 524, 878, 542, 913, 510, 427, 112, 47, 313, 465, 230, 236, 656, 436, 153, 159, 502, 771, 16, 5, 661, 539, 766, 759, 945, 721, 185, 386, 191, 202, 331, 127, 126, 728, 211, 649, 71, 780, 765, 194, 697, 642, 851, 947, 449, 37, 2, 238, 451, 393, 547, 666, 168, 757, 44, 203, 297, 526, 608, 961, 348, 462, 105, 399, 155, 246, 192, 351, 442, 198, 278, 355, 573, 781, 179, 405, 537, 424, 10, 816, 994, 434, 836, 46, 282, 76, 699, 210, 484, 707, 110, 917, 29, 720, 420, 120, 206, 899, 772, 52, 274, 966, 825, 125, 563, 356, 190, 104, 602, 338, 984, 162, 896, 26, 429, 861,
			615, 648, 365, 743, 566, 325, 607, 407, 739, 822, 646, 284, 448, 946, 734, 884, 787, 611, 890, 221, 305, 457, 366, 468, 218, 554, 809, 260, 134, 932, 68, 801, 24, 753, 295, 391, 527, 380, 175, 651, 773, 865, 73, 41, 879, 578, 133, 31, 11, 144, 708, 791, 808, 142, 239, 594, 733, 847, 663, 839, 136, 793, 696, 372, 240, 533, 81, 922, 354, 672, 430, 189, 346, 368, 322, 213, 855, 572, 209, 560, 174, 613, 846, 705, 974, 575, 869, 364, 220, 59, 850, 418, 385, 251, 593, 957, 596, 599, 121, 860, 976, 735, 395, 294, 871, 592, 586, 664, 36, 229, 473, 455, 140, 499, 880, 876, 647, 742, 912, 811, 723, 200, 509, 516, 665, 604, 480, 208, 887, 709, 266, 387, 525, 83, 345, 130, 320, 964, 80, 552, 357, 82, 466, 45, 921, 70, 625, 478, 55, 726, 520, 953, 969, 685, 35, 854, 971, 906, 852, 722, 857, 106, 383, 556, 323, 935, 360, 493, 435, 129, 627, 298, 553, 828, 324, 461, 948, 829, 269, 170, 117, 681, 889, 748, 538, 335, 460, 549, 513, 231, 3, 479, 979, 882, 474, 327, 785, 149, 898, 583, 680, 687, 786, 803, 22, 148, 102, 459, 256, 415, 713, 401, 818, 868, 866, 968, 862, 799, 408, 304, 250, 171, 489, 806, 409, 737, 972, 428, 845, 769, 150, 620, 938, 724, 511, 56, 951, 677, 504, 243, 641, 27, 139, 447, 160, 600, 97, 271, 378, 638, 235, 797, 894, 101, 565, 187, 302, 540, 514, 49, 169, 519, 689, 143, 535, 633, 924, 268, 225, 693, 751, 7, 255, 352, 881, 754, 729, 262, 463, 738, 694, 245, 741, 440, 783, 146, 730, 290, 336, 195, 758, 640, 545, 784, 750, 674, 124, 40, 23, 253, 164, 761, 725, 454, 717, 629, 158, 349, 301, 736, 132, 425, 718, 918, 652, 329, 458, 886, 579, 830, 823, 389, 982, 181, 270, 654, 244, 603, 692, 403, 464, 975, 423, 546, 610, 937, 756, 863, 397, 477, 588, 15, 289, 492, 999, 122, 512, 605, 958, 892, 813, 58, 506, 774, 523, 353, 167, 893, 669, 4, 226, 471, 531, 856, 123, 196, 939, 66, 390, 373, 954, 414, 842, 311, 970, 714, 930, 247, 667, 919, 897, 870, 275, 574, 67, 792, 8, 382, 205, 342, 859, 949, 85, 727, 453, 328, 377, 955, 180, 789, 796, 590, 908, 788, 89, 622, 279, 212,
			54, 273, 432, 72

	};
	private static int[] mediumSizeSorted = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
			937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
			965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
			993, 994, 995, 996, 997, 998, 999, 1000
	};

	private static int[] largeSize;
	private static int[] largeSizeSorted;


	public static int[] getSmallArray() {
		return smallSize;
	}

	public static int[] getAlmostSortedArray() {
		return almostSortedArray;
	}

	public static int[] getSmallSizeSorted() {
		return smallSizeSorted;
	}

	public static int[] getMediumArray() {
		return mediumSize;
	}

	public static int[] getMediumSizeSorted() {
		return mediumSizeSorted;
	}

	public static int[] getLargeArray() {
		return largeSize;
	}

	public static int[] getLargeSizeSorted() {
		return largeSize;
	}


	public static void initLargeArray() throws FileNotFoundException {
		Scanner scanner = new Scanner(new File("/Users/johanekdahl/Projects/Examensarbete/SortingAlgos/SortingAlgorithms/numbers.txt"));
		largeSize = new int[100000];
		int idx = 0;
		while (scanner.hasNextInt()) {
			largeSize[idx] = scanner.nextInt();
			idx++;
		}

		largeSizeSorted = new int[100000];
		scanner = new Scanner(new File("/Users/johanekdahl/Projects/Examensarbete/SortingAlgos/SortingAlgorithms/numbersSorted.txt"));
		for (int i = 0; i < largeSizeSorted.length; i++) {
			if (scanner.hasNextInt()) {
				largeSizeSorted[i] = scanner.nextInt();
			}
		}


		scanner.close();
	}


}
